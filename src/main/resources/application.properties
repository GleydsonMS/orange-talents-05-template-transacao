server.port=${APP_PORT:8081}

spring.datasource.url=jdbc:postgresql://${URL_DATABASE:localhost:5433/transactions}
spring.datasource.username=${USER_DATABASE:postgres}
spring.datasource.password=${PASSWORD_DATABASE:docker}

spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImproveNamingStrategy
spring.jpa.properties.hibernate.dialetc=org.hibernate.dialect.PostgreSQLDialect


# Endere√ßo do Kafka
spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:transactions}

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}

spring.kafka.topic.transactions=${TOPIC_TRANSACTIONS:transacoes}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/transaction}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/transaction/protocol/openid-connect/certs}
